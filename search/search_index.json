{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udc4b Hi there! I'm Sebastian Dziekonski","text":""},{"location":"#aspiring-data-scientist-machine-learning-enthusiast-problem-solver","title":"Aspiring Data Scientist | Machine Learning Enthusiast | Problem Solver","text":"<p>I'm an aspiring Data Scientist with a strong foundation in data analysis and machine learning, developed through a 9-month intensive training program. I specialize in transforming data into actionable insights through preprocessing, predictive modeling, and visualization \u2014 using tools like Python, Pandas, PyCaret, Streamlit, and SQL.</p> <p>I\u2019m passionate about continuous learning and excited to contribute to projects that blend technical rigor with creative thinking. Whether it's building machine learning models, creating interactive dashboards, or exploring new data challenges \u2014 I'm always eager to grow, collaborate, and innovate.</p> <p>In the near future I plan to also try my skills in projects that use models like:  - Text-to-Image  - Image-to-Text  - Data-to-Category  - Data-to-Cluster  - Data-to-Value  - And many more</p> <p>This portfolio showcases some of the projects I\u2019ve built \u2014 combining data, design, and storytelling. Take a look around, and feel free to reach out if you\u2019d like to connect!</p>"},{"location":"audio_notes/","title":"Audio Notes","text":""},{"location":"audio_notes/#ai-powered-audio-note-taking-with-search","title":"\ud83c\udf99\ufe0f AI-Powered Audio Note-Taking with Search","text":"<p>This is a Streamlit-based voice note-taking app that lets users record, transcribe, save, and search audio notes using OpenAI's Whisper and Embeddings API, with Qdrant vector database for smart semantic retrieval. It's designed to be lightweight, private (runs in memory), and interactive.</p>"},{"location":"audio_notes/#what-the-app-does","title":"\ud83d\ude80 What the App Does","text":"<ul> <li> <p>Record &amp; Transcribe Notes Users record voice notes directly in the browser. Notes are transcribed using OpenAI Whisper</p> </li> <li> <p>Save Notes to Vector Database Transcriptions are converted to vector embeddings. Stored in an in-memory Qdrant vector database for retrieval</p> </li> <li> <p>Search Notes Semantically Users can type a search query. The app finds related notes by meaning using vector similarity</p> </li> </ul>"},{"location":"audio_notes/#how-it-works-flow-overview","title":"\u2699\ufe0f How It Works (Flow Overview)","text":"<ul> <li> <p>\ud83d\udd10 API Setup User supplies an OpenAI API key (via .env or manual input). Key is stored in st.session_state for secure use</p> </li> <li> <p>\ud83c\udfa4 Audio Input Audio is recorded via audiorecorder component and stored as .mp3 in memory</p> </li> <li> <p>\ud83d\udcdd Transcription Audio bytes are sent to OpenAI Whisper (whisper-1). Returned text is shown and editable before saving</p> </li> <li> <p>\ud83d\udcbe Note Storage Each note is embedded into a 3072-dimensional vector using text-embedding-3-large. Stored in Qdrant using cosine similarity for fast semantic search</p> </li> <li> <p>\ud83d\udd0d Note Search Query is embedded, then matched against stored notes. Results are shown along with similarity scores (if searching)</p> </li> </ul> <p>Follow the link below, to see for yourself how the application works: Open in new tab</p>"},{"location":"insurance_charge_predictor/","title":"Insurance Charge Predictor","text":"<p>The application purpose is to estimate how much money you might have to pay for insurance based on your personal data like age, BMI, smoker status etc.</p> <p>Also when charge is estimated, application will give the user a hint on what he or she might do to decrease estimated insurance charge. </p>"},{"location":"insurance_charge_predictor/#main-features","title":"\ud83e\udded Main Features:","text":""},{"location":"insurance_charge_predictor/#home-page","title":"Home Page","text":"<ul> <li> <p>Explains how insurance charges vary.</p> </li> <li> <p>Shows a sample dataset (from pycaret.datasets) and a histogram of charges.</p> </li> </ul>"},{"location":"insurance_charge_predictor/#check-your-insurance","title":"Check Your Insurance","text":"<ul> <li> <p>A form where users manually enter their data:</p> <pre><code>-Age, sex, weight, height, children, smoker, and region\n</code></pre> </li> <li> <p>The app calculates BMI (body mass index) from weight/height.</p> </li> <li> <p>It then predicts the insurance charge using a trained machine learning model.</p> </li> <li> <p>It also gives personalized health tips to potentially lower your insurance premium.</p> </li> </ul>"},{"location":"insurance_charge_predictor/#audio-form-completion-currently-disabled-for-now-marked-as-coming-soon","title":"Audio Form Completion (Currently disabled for now \u2014 marked as \u201ccoming soon\u201d)","text":"<ul> <li> <p>Intended to let users speak their data and use speech-to-text (STT) to auto-fill the form.</p> </li> <li> <p>Uses OpenAI Whisper API to transcribe audio (via openai.audio.transcriptions.create()).</p> </li> <li> <p>Also planned: parsing natural language into structured form data.</p> </li> </ul>"},{"location":"insurance_charge_predictor/#key-tools-techniques-used","title":"\ud83d\udee0\ufe0f Key Tools &amp; Techniques Used","text":""},{"location":"insurance_charge_predictor/#ui-framework","title":"\ud83d\uddbc\ufe0f UI Framework:","text":"<ul> <li>Streamlit: Quickly creates web apps with Python.</li> </ul>"},{"location":"insurance_charge_predictor/#model-training-prediction","title":"\ud83d\udce6 Model Training &amp; Prediction:","text":""},{"location":"insurance_charge_predictor/#pycaret-regression-module","title":"PyCaret (Regression Module):","text":"<ul> <li> <p>Automates training and saving of regression models.</p> </li> <li> <p>The app loads a pre-trained PyCaret model (v3_insurance_prediction_model) to make predictions.</p> </li> </ul>"},{"location":"insurance_charge_predictor/#data-visualization","title":"\ud83d\udcca Data Visualization:","text":"<ul> <li>Plotly Express: Interactive histogram for visualizing insurance charge distributions.</li> </ul>"},{"location":"insurance_charge_predictor/#machine-learning-techniques","title":"\ud83e\uddee Machine Learning Techniques:","text":""},{"location":"insurance_charge_predictor/#the-model-trained-via-pycaret-likely-uses-one-or-more-regression-techniques-like","title":"The model (trained via PyCaret) likely uses one or more regression techniques like:","text":"<ul> <li> <p>Linear Regression</p> </li> <li> <p>Random Forest Regressor</p> </li> <li> <p>Gradient Boosting</p> </li> <li> <p>PyCaret tries many and chooses the best via cross-validation.</p> </li> </ul>"},{"location":"insurance_charge_predictor/#audio-nlp-planned-features","title":"\ud83d\udce6 Audio &amp; NLP (planned features):","text":"<ul> <li> <p>OpenAI Whisper API: Used for speech-to-text transcription.</p> </li> <li> <p>Natural Language Parsing: Planned to convert spoken text into form data using regex-based extraction.</p> </li> </ul> <p>Follow the link below, to see for yourself how the application works: Open in new tab</p>"},{"location":"iris/","title":"Fascynuj\u0105ca Analiza Danych EDA Irys\u00f3w: Eksploracja Domenowa","text":"<p>Zapraszamy do zapoznania si\u0119 z wyj\u0105tkowym projektem autorstwa Sebastiana, kt\u00f3ry przenosi nas w \u015bwiat analizy danych irys\u00f3w za pomoc\u0105 eksploracji domenowej (EDA). W tym projekcie znajdziesz mn\u00f3stwo trafnych wniosk\u00f3w i ciekawych obserwacji, kt\u00f3re rzucaj\u0105 nowe \u015bwiat\u0142o na te pi\u0119kne kwiaty. Przygotuj si\u0119 na fascynuj\u0105c\u0105 podr\u00f3\u017c przez dane, kt\u00f3ra z pewno\u015bci\u0105 wzbogaci Twoj\u0105 wiedz\u0119 i zainspiruje do dalszych bada\u0144.</p> <p>Pobierz Notebook</p> <p></p>"},{"location":"my_GPT/","title":"\ud83e\udde0 My GPT \u2013 A Personalized AI Chatbot App","text":"<p>My GPT is a Streamlit-based chatbot application that connects to OpenAI\u2019s GPT models (like GPT-4o) to provide intelligent, conversational responses. It\u2019s designed for users who want a customizable and cost-transparent AI assistant experience.</p>"},{"location":"my_GPT/#key-features","title":"\u2728 Key Features","text":"<ul> <li> <p>Interactive Chat Interface Chat with an AI assistant that remembers context and responds naturally.</p> </li> <li> <p>Customizable Personality Set the chatbot\u2019s tone and behavior to suit your preferences.</p> </li> <li> <p>Conversation Management Save, rename, and switch between multiple conversations with history tracking.</p> </li> <li> <p>Cost Monitoring Real-time display of conversation costs in USD and PLN, based on actual token usage.</p> </li> <li> <p>Local Storage All conversations are stored securely in local JSON files for easy access and persistence.</p> </li> </ul>"},{"location":"my_GPT/#built-with","title":"\ud83d\udee0\ufe0f Built With","text":"<ul> <li> <p>Streamlit \u2013 For the user interface</p> </li> <li> <p>OpenAI API \u2013 For AI-generated responses</p> </li> <li> <p>Python + JSON \u2013 For data handling and local storage</p> </li> <li> <p>dotenv \u2013 For secure API key management</p> </li> </ul> <p>Follow the link below, to see for yourself how the application works: Open in new tab</p>"},{"location":"titanic/","title":"Fascynuj\u0105ca Analiza Danych EDA Titanica: Eksploracja Domenowa","text":"<p>Zapraszamy do zapoznania si\u0119 z wyj\u0105tkowym projektem autorstwa Sebastiana, kt\u00f3ry przenosi nas w \u015bwiat analizy danych Titanica za pomoc\u0105 eksploracji domenowej (EDA). W tym projekcie znajdziesz mn\u00f3stwo trafnych wniosk\u00f3w i ciekawych obserwacji, kt\u00f3re rzucaj\u0105 nowe \u015bwiat\u0142o na te pi\u0119kne kwiaty. Przygotuj si\u0119 na fascynuj\u0105c\u0105 podr\u00f3\u017c przez dane, kt\u00f3ra z pewno\u015bci\u0105 wzbogaci Twoj\u0105 wiedz\u0119 i zainspiruje do dalszych bada\u0144.</p> <p>Pobierz Notebook</p> <p></p>"}]}